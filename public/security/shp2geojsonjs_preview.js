var EPSGUser,url,encoding,EPSG,inputData={},geoData={},EPSG4326=proj4("EPSG:4326");function loadshp(e,o){if(url=e.url,encoding="utf-8"!=typeof e.encoding?e.encoding:"utf-8",EPSG="undefined"!=typeof e.EPSG?e.EPSG:4326,3821==EPSG&&proj4.defs([["EPSG:3821","+proj=tmerc +ellps=GRS67 +towgs84=-752,-358,-179,-.0000011698,.0000018398,.0000009822,.00002329 +lat_0=0 +lon_0=121 +x_0=250000 +y_0=0 +k=0.9999 +units=m +no_defs"]]),EPSGUser=proj4("EPSG:"+EPSG),"string"!=typeof url){var r=new FileReader;r.onload=function(e){var r=window.URL||window.webkitURL||window.mozURL||window.msURL,t=new JSZip(e.target.result),n=t.file(/.shp$/i)[0].name,a=t.file(/.dbf$/i)[0].name,s=t.file(/.prj$/i)[0];if(s){proj4.defs("EPSGUSER",t.file(s.name).asText());try{EPSGUser=proj4("EPSGUSER")}catch(e){console.error("Unsuported Projection: "+e)}}SHPParser.load(r.createObjectURL(new Blob([t.file(n).asArrayBuffer()])),shpLoader,o),DBFParser.load(r.createObjectURL(new Blob([t.file(a).asArrayBuffer()])),encoding,dbfLoader,o)},r.readAsArrayBuffer(url)}else JSZipUtils.getBinaryContent(url,(function(e,r){if(e)throw e;var t=window.URL||window.webkitURL,n=new JSZip(r),a=n.file(/.shp$/i)[0].name,s=n.file(/.dbf$/i)[0].name,i=n.file(/.prj$/i)[0];if(i){proj4.defs("EPSGUSER",n.file(i.name).asText());try{EPSGUser=proj4("EPSGUSER")}catch(p){console.error("Unsuported Projection: "+p)}}SHPParser.load(t.createObjectURL(new Blob([n.file(a).asArrayBuffer()])),shpLoader,o),DBFParser.load(t.createObjectURL(new Blob([n.file(s).asArrayBuffer()])),encoding,dbfLoader,o)}))}function loadEPSG(e,o){var r=document.createElement("script");r.src=e,r.onreadystatechange=o,r.onload=o,document.getElementsByTagName("head")[0].appendChild(r)}function TransCoord(e,o){if(proj4)var r=proj4(EPSGUser,EPSG4326,[parseFloat(e),parseFloat(o)]);return{x:r[0],y:r[1]}}function shpLoader(e,o){inputData["shp"]=e,inputData["shp"]&&inputData["dbf"]&&o&&o(toGeojson(inputData))}function dbfLoader(e,o){inputData["dbf"]=e,inputData["shp"]&&inputData["dbf"]&&o&&o(toGeojson(inputData))}function toGeojson(e){var o,r,t={},n=[],a=e.shp.records,s=e.dbf.records;t.type="FeatureCollection",min=TransCoord(e.shp.minX,e.shp.minY),max=TransCoord(e.shp.maxX,e.shp.maxY),t.bbox=[min.x,min.y,max.x,max.y],t.features=n;for(var i=0;i<a.length;i++){switch(o={},o.type="Feature",r=o.geometry={},properties=o.properties=s[i],a[i].shape.type){case 1:r.type="Point";var p=TransCoord(a[i].shape.content.x,a[i].shape.content.y);r.coordinates=[p.x,p.y];break;case 3:case 8:r.type=3==a[i].shape.type?"LineString":"MultiPoint",r.coordinates=[];for(var d=0;d<a[i].shape.content.points.length;d+=2){p=TransCoord(a[i].shape.content.points[d],a[i].shape.content.points[d+1]);r.coordinates.push([p.x,p.y])}break;case 5:r.type="Polygon",r.coordinates=[];for(var c=0;c<a[i].shape.content.parts.length;c++){var f=a[i].shape.content.parts[c],l=[];for(d=2*f;d<(2*a[i].shape.content.parts[c+1]||a[i].shape.content.points.length);d+=2){var u=a[i].shape.content.points;p=TransCoord(u[d],u[d+1]);l.push([p.x,p.y])}r.coordinates.push(l)}break;default:}"coordinates"in o.geometry&&n.push(o)}return t}